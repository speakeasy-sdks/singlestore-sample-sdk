// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy-sdks/singlestore-sample-sdk/pkg/models/shared"
	"net/http"
)

type GetStagesFileRequest struct {
	// Path in Stages to a file or folder
	Path string `pathParam:"style=simple,explode=false,name=path"`
	// ID of the Stages-enabled workspace group
	WorkspaceGroupID string `pathParam:"style=simple,explode=false,name=workspaceGroupID"`
	// If enabled, the API request returns only metadata
	Metadata *bool `queryParam:"style=form,explode=true,name=metadata"`
}

func (o *GetStagesFileRequest) GetPath() string {
	if o == nil {
		return ""
	}
	return o.Path
}

func (o *GetStagesFileRequest) GetWorkspaceGroupID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceGroupID
}

func (o *GetStagesFileRequest) GetMetadata() *bool {
	if o == nil {
		return nil
	}
	return o.Metadata
}

type GetStagesFileResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// OK
	StagesObjectMetadata *shared.StagesObjectMetadata
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (o *GetStagesFileResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetStagesFileResponse) GetStagesObjectMetadata() *shared.StagesObjectMetadata {
	if o == nil {
		return nil
	}
	return o.StagesObjectMetadata
}

func (o *GetStagesFileResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetStagesFileResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}
