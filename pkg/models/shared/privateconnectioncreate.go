// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PrivateConnectionCreateType - The private connection type
type PrivateConnectionCreateType string

const (
	PrivateConnectionCreateTypeInbound  PrivateConnectionCreateType = "INBOUND"
	PrivateConnectionCreateTypeOutbound PrivateConnectionCreateType = "OUTBOUND"
)

func (e PrivateConnectionCreateType) ToPointer() *PrivateConnectionCreateType {
	return &e
}

func (e *PrivateConnectionCreateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INBOUND":
		fallthrough
	case "OUTBOUND":
		*e = PrivateConnectionCreateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PrivateConnectionCreateType: %v", v)
	}
}

// PrivateConnectionCreate - Represents the information specified when creating a private connection
type PrivateConnectionCreate struct {
	// The private connection allow list
	AllowList *string `json:"allowList,omitempty"`
	// The name of the private connection service
	ServiceName *string `json:"serviceName,omitempty"`
	// The private connection type
	Type *PrivateConnectionCreateType `json:"type,omitempty"`
	// The ID of the workspace group containing the private connection
	WorkspaceGroupID string `json:"workspaceGroupID"`
	// The ID of the workspace to connect with
	WorkspaceID *string `json:"workspaceID,omitempty"`
}

func (o *PrivateConnectionCreate) GetAllowList() *string {
	if o == nil {
		return nil
	}
	return o.AllowList
}

func (o *PrivateConnectionCreate) GetServiceName() *string {
	if o == nil {
		return nil
	}
	return o.ServiceName
}

func (o *PrivateConnectionCreate) GetType() *PrivateConnectionCreateType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *PrivateConnectionCreate) GetWorkspaceGroupID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceGroupID
}

func (o *PrivateConnectionCreate) GetWorkspaceID() *string {
	if o == nil {
		return nil
	}
	return o.WorkspaceID
}
