// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// Provider - Name of the provider
type Provider string

const (
	ProviderAws   Provider = "AWS"
	ProviderGcp   Provider = "GCP"
	ProviderAzure Provider = "Azure"
)

func (e Provider) ToPointer() *Provider {
	return &e
}

func (e *Provider) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWS":
		fallthrough
	case "GCP":
		fallthrough
	case "Azure":
		*e = Provider(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Provider: %v", v)
	}
}

// Region - Represents information related to a region in which a workspace group is created
type Region struct {
	// Name of the provider
	Provider Provider `json:"provider"`
	// Name of the region
	Region string `json:"region"`
	// ID of the region
	RegionID string `json:"regionID"`
}

func (o *Region) GetProvider() Provider {
	if o == nil {
		return Provider("")
	}
	return o.Provider
}

func (o *Region) GetRegion() string {
	if o == nil {
		return ""
	}
	return o.Region
}

func (o *Region) GetRegionID() string {
	if o == nil {
		return ""
	}
	return o.RegionID
}
